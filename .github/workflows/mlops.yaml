name: MLOps

on:
  push:
    branches:
      - main

jobs:
  train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Authentification à GCP
      - name: Login to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}'

      - name: Configure gcloud
        run: |
          gcloud config set project modern-bond-303506
        # gcloud config set compute/region us-central1

      # Installer uniquement DVC avec support GCS pour gérer les modèles et metrics
      - name: Install DVC
        run: pip install dvc[gcs]

      # Construire l'image Docker et la pousser sur GCR
      - name: Build and push Docker image
        run: gcloud builds submit --tag gcr.io/modern-bond-303506/train_image:latest .

      # Lancer le job Vertex AI
      - name: Launch Vertex AI job
        id: launch_job
        run: |
          JOB_ID=$(gcloud ai custom-jobs create \
            --region=us-central1 \
            --display-name="entraînement-mlops" \
            --worker-pool-spec=machine-type=n1-standard-4,container-image-uri=gcr.io/modern-bond-303506/train_image:latest,command=python,args=train.py,args=data/prepared,args=model_versions \
            --format='value(name)')
          echo "JOB_ID=$JOB_ID" >> $GITHUB_ENV

      # Attendre la fin du job
      - name: Wait for job to finish
        run: |
          STATUS=$(gcloud ai custom-jobs describe "${JOB_ID}" --region=us-central1 --format='value(state)')
          while [ "$STATUS" != "SUCCEEDED" ] && [ "$STATUS" != "FAILED" ]; do
            echo "Job status: $STATUS"
            sleep 30
            STATUS=$(gcloud ai custom-jobs describe "${JOB_ID}" --region=us-central1 --format='value(state)')
          done
          echo "Final job status: $STATUS"
          if [ "$STATUS" = "FAILED" ]; then
            exit 1
          fi
        env:
          JOB_ID: ${{ env.JOB_ID }}

      # Récupérer le modèle et les métriques depuis GCS
      # Assurez-vous que le job Vertex AI les a bien exportés dans gs://sportify_classifier/training-outputs/
      - name: Pull new model and metrics from GCS
        run: |
          gsutil cp -r gs://sportify_classifier/training-outputs/model_versions .
          gsutil cp -r gs://sportify_classifier/training-outputs/evaluation_outputs .

      # Mettre à jour DVC avec le nouveau modèle et métriques
      - name: DVC add and push
        run: |
          dvc add model_versions
          dvc add evaluation_outputs/metrics.json
          git add model_versions.dvc evaluation_outputs/metrics.json.dvc
          git commit -m "Add new model and metrics"
          dvc push
          git push